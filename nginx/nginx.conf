user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile        on;
    keepalive_timeout  65;

    # 서버 블록 1: HTTP(80) 요청을 HTTPS로 리디렉션
    server {
        listen 80;
        server_name sldctd-tp-admin-api.kro.kr;
        return 301 https://$host$request_uri;
    }

    # 서버 블록 2: HTTPS(443) 요청을 처리하는 메인 서버
    server {
        listen 443 ssl;
        server_name sldctd-tp-admin-api.kro.kr;

        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location /api/admin/ {
            rewrite ^/api/admin/(.*) /api/$1 break;
            proxy_pass http://tp-admin-api:8081;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/user/ {
            rewrite ^/api/user/(.*) /api/$1 break;
            proxy_pass http://tp-user-api:8080;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}